'''
주석(Comment)
    1.소스에 설명을 추가하는 것
    2.프로그램 수행에 영향이 없다.
    3.한 줄 주석 : # 뒤부터 주석처리
    4.여러줄 주석 : ''' ''' 또는 """ """
                    >작은 따옴표 3개 또는 큰따옴표 3개로 묶는다.

    print()함수
        1.화면으로 데이터를 출력하는 함수
            >함수 : 특정 행위를 하기 위해 미리 만들어 놓은 기능
            >화면 : IDLE 나 콘솔(cmd)
        2.대화형 인터프리터에서는 사용 X

    문자열(String)
        -문자의 나열
        -문자열을 만들려면 "Abc" 또는 'abc' 처럼 따옴표로 묶는다.
                    
'''
print("안녕하세요")
#print(안녕하세요)

#print() 함수의 사용법
#여러개의 값 출력 : 콤마(,)로 값을 나열
print(1,2,3)
print("A","B","C")

#세미콜론(;)으로 여러줄의 코드를 합칠 수 있다.
# > 한 줄에는 하나의 '명령'을 사용
print("A","B");print("C","D")

'''
print() 함수에는 '구분기호' 와 '마지막 기호'
    -콤마(,)로 값을 나열할 때 값을 구분 하는 '구분기호'
        >기본값 공백(sep=' ')
    -print() 함수의 출력이 끝나면 출력하는 '마지막 기호'
        >기본 값 개행(줄바꿈) (end = '\n')
            \n은 줄바꿈(개행)을 의미하는 특수한 문자(이스케이프 문자)
            n = new Line(새로운 줄)
'''

print(1,2,3)#sep를 따로 입력하지 않으면 기본이 공백
print(1,2,3,sep=' ')#sep=' '이 기본 적용
print(1,2,3,sep='')#우리가 직접 구분 기호 지정
print(1,2,3,sep='하하')

print("안녕하세요")
print("안녕하세요",end='\n')
print("안녕",end='')
print("하세요",end='ㅋㅋㅋ')
print("하하")

#여러값을 나열할 때 구분 sep
#print가 끝나면 end

print()
print()#이렇게 사용하면 end='\n'만 적용되어 1줄 개

#print() 함수에서 + (덧셈) 용도
#+ 같은 기호는 '연산자'라고 부른다.
#연산을 수행한다 = 하나의 값을 만든다.

print(1+2)#숫자 + 숫자 => 덧셈 연산
print("1"+"2")#문자 + 숫자 =>문자 연결(하나의 문자를 만듬)
#print(1+"2")#오류! 숫자 + 문자열(자바는 글자 취급하여 가능)

print("1" "2")#문자열끼리는 기호 없이 연결 가능(비추천)
#print("1" 2)

# + 기호는 '연산' --> 하나의 값을 만든다.
# , 기호는 '나열' --> 여러값을 나열하여 출력
print(2019,"년도 입니다.",sep='')
#print() 함수에는 콤마(,)로 나열된 값들은 어떤 형태의 값도 가능

print(2019+1,"년도 입니다"+"하하하",sep ='')

print()

'''
변수(Variable)
    - 값을 저장하는 공간
    - 파이썬에서는 사용하는 변수는 값을 '저장'하는 개념이 아니라
      값을 '가르킨다'
'''
#변수에 값 대입(1) - 하나씩
a = 1 #a라는 변수에 1을 '대입'

#프로그래밍 언어에서 = (equal,등호) 기호는 '같다' 아닌 '대입'
# > 우측값을 좌측에 대입
#1을 저장하는게 아니라, 어딘가에 존재는 1을 a 가르키고 있다.
#파이썬에서는 변수가 어떤 형태의 값이던 가리킬 수 있다.
# > 값의 형태를 명시하지 않고 사용

b = "2"
c = 3
print(a,b,c)

#변수에 값 대입(2) -한번에
a,b,c = 4,5,6 # 순서대로 대입,짝이 맞아야 함
print(a,b,c)

#변수에 값 대입(3) - 모두 같은 값
a=b=c=7
print(a,b,c)

#변수끼리 값 교체

a = 1
b = 2
print(a,b)
a,b = b,a
print(a,b)

#변수가 값을 가르킨다.
a = 10
b = 10

print(id(10))#숫자 10의 고유 id 값을 출력
print(id(a))
print(id(b))

import sys #sys라는 '모듈을' 추가
print("처음 2020 가르키는 개수:",sys.getrefcount(2020))
#sys 모듈에 존재하는 함수를 사용
#get:구하겠다
#ref: reference(참조하는)
#count : 개수
#>> 숫자 2020을 가르키고 있는 개수

a = 2020
print("a에 대입 후 : ",sys.getrefcount(2020))

b = 2020
print("b에 대입 후 : ",sys.getrefcount(2020))

del(a)#변수를 지우는 명령어
del(b)
print("a,b 제거 후:",sys.getrefcount(2020))

#print(a)#위에서 제거한 변수는 사용할 수 없다.

'''
변수명 규칙
    1.한글 사용 가능 -> 그래도 영어로 한다.
    2.특수문자(기호) 는 _만 사용
    3.숫자사용 가능, 단 첫 글자 X
    4.대소문자 구분
    5.예약어 사용 X

    중요함
        >변수명 작성시 의미 부여
        >변수만 봐도 어떤 값을 사용하는지 알 수 있도록

        숫자 num
        문자 str
'''

print()
print("재미있는 파이썬~")

print = "정말인가요"
#print는 변수화가 되었음
#print("Hello")
del(print)
print("재미있어요")

#예약어 목록 확인
import keyword #keyword라는 모듈 사용하겠다.
print(keyword.kwlist)

'''
이름,나이,전화번호 변수 3개에 본인의 정보를 대입

[출력결과]
이름 : 한수창
나이 : 20세
번호 : 010-1234-4567
'''
print()

name = "한수창"
age = 20
phone = "010-1234-4567"

print("이름 : "+name)
print("나이 : ",age,sep='')#문자 + 숫자 = 오류
print("번호 : ",phone,sep='')

























