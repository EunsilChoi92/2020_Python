# while문 연습
'''
    1. 1부터 10까지 합 구하기
        > 1~10까지 증가할 변수
        > 합계를 누적할 변수

    [출력결과]
    1~10까지 합은 55입니다.
'''

'''
    2. 1부터 입력 받은 수까지 합 구하기
    [출력결과]
    숫자 입력 : 5
    1~5까지 합은 15입니다.
'''

'''
    3. 구구단 7단 출력하기
        [출력결과]
        7 * 1 = 7
        ...
        7 * 9 = 63
'''

'''
    4. 입력 받은 단 출력하기
        [출력결과]
        단을 입력하세요 : 5
        5 * 1 = 5
        ...
        5 * 9 = 45
'''

'''
    5. * 찍기
        - 입력된 숫자만큼 아래와 같은 모양으로 별 찍기
        - 조건변수를 증가시키며 문자열 연산을 하면 매우 편하게 출력할 수 있다.

    [출력결과]
    숫자 입력 : 5
    *
    **
    ***
    ****
    *****
'''

'''
    6. 숫자 맞추기
        1~100까지 랜덤으로 정답 숫자를 생성
        while문 안에서 숫자를 입력 받고, 숫자가 정답이면 탈출!

    [출력결과] (정답이 70이라고 가정)
    숫자 입력 : 50
    더 큰 수를 입력해보세요.
    숫자 입력 : 80
    더 작은 수를 입력해보세요.
    숫자 입력 : 70
    정답입니다!
    3회만에 맞추셨습니다.   * 심화 : 몇 회 만에 맞췄는지 추가로 출력
'''
answer = 10
count = 0
while True :
    input_num = int( input("숫자 입력 : ") )
    count += 1

    if input_num == answer :
        print()
        break

    # 여기서부터는 정답이 아닌 경우밖에 없다.
    if input_num > answer :
        print()
    #elif input_num < answer :
    else
        print()




      

# for문 연습
# n의 배수 : 어떤 숫자를 n으로 나눈 나머지가 0   --> num % n == 0 --> num은 n의배수
# 공배수 :    n1과 n2의 공배수 = 둘 다 만족!    num % n1 == 0 and num % n2 == 0
'''
    1. 1부터 입력 받은 수까지 '짝수'의 합 구하기

        [출력결과]
        숫자 입력 : 5
        1~5까지 짝수의 합은 6입니다.
'''


'''
    2. 1부터 200까지 3과 4의 공배수를 하나의 변수에 '누적'
       누적된 수가 1000을 초과하면 반복문을 '탈출'
       이때, 누적된 수와 마지막에 더했던 공배수를 출력

        [출력결과]
        누적된 수 : 1092
        더한 수 : 156
'''
        

'''
    3. 1~100 사이 정수 중, 3의 배수와 5의 배수를 '역순'으로 출력
       단, 3과 5의 공배수는 <15> 처럼 출력

       [출력결과]
       100 99 96 95 93 <90> 87 ... 5 3

'''



'''
    난이도 <상>
    4. 2중for문 구구단 예제를 for문 1개만 사용해서 만들어보기
        - 총 반복 횟수 = 72회
        - 처음 단은 2
        - 곱해지는 숫자는 처음이 1
        - 9회 수행마다, 단이 1 증가, 곱해지는 숫자는 1로 변경
'''
